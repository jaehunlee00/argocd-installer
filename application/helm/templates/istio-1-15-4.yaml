{{ if .Values.modules.istio.enabled }}
{{ $isMaster := eq .Values.global.cluster "master" }}
{{ $prefix := printf "%s-%s" .Values.global.clusterNamespace .Values.global.clusterName }}
{{ $module := "istio" }}
{{ $ns := "ns-istio-system" }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: example-applicationset
spec:
  generators:
    - clusterDecisionResource:
        apiVersion: v1
        kind: ConfigMap
        name: cluster-decision-resource
        namespace: argocd
        fieldSelectors:
          - fieldPath: data.prefix
            value: $prefix
          - fieldPath: data.isMaster
            value: $isMaster
    - list:
        elements:
          - name: {{ ternary $ns (printf "%s-%s" $prefix $ns) $isMaster }}
            namespace: argocd
            syncWave: "-3"
            finalizer: resources-finalizer.argocd.argoproj.io
            destinationName: {{ .Values.global.clusterName }}
            project: {{ .Values.spec.project }}
            sourcePath: manifest/istio/namespace
            repoURL: {{ .Values.spec.source.repoURL }}
            targetRevision: {{ .Values.spec.source.targetRevision }}
            autoSync: {{ .Values.modules.istio.autoSync }}
          - name: {{ ternary $module (printf "%s-%s" $prefix $module) $isMaster }}-base
            namespace: argocd
            syncWave: "-2"
            destinationName: {{ .Values.global.clusterName }}
            destinationNamespace: istio-system
            project: {{ .Values.spec.project }}
            sourcePath: manifest/istio/istio-base
            repoURL: {{ .Values.spec.source.repoURL }}
            targetRevision: {{ .Values.spec.source.targetRevision }}
            releaseName: {{ $module }}-base
            autoSync: {{ .Values.modules.istio.autoSync }}
  template:
    metadata:
      name: '{{ name }}'
      namespace: '{{ namespace }}'
      annotations:
        argocd.argoproj.io/sync-wave: '{{ syncWave }}'
      finalizers:
        - '{{ finalizer }}'
    spec:
      destination:
        name: '{{ destinationName }}'
        namespace: '{{ destinationNamespace }}'
      project: '{{ project }}'
      source:
        path: '{{ sourcePath }}'
        repoURL: '{{ repoURL }}'
        targetRevision: '{{ targetRevision }}'
        helm:
          releaseName: '{{ releaseName }}'
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
